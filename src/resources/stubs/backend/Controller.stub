<?php

namespace App\Http\Controllers\Backend;

use Illuminate\Http\RedirectResponse;
use Illuminate\View\View;
use App\Http\Controllers\Controller;
use App\Http\Requests\Backend\{{modelName}}Request;
use App\Http\Controllers\Backend\UploadController;
use Illuminate\Http\Request;
{{usedModels}}

/**
 * {{modelName}}Controller
 *
 * Handles {{moduleName}} on admin area
 * 
 */

class {{modelName}}Controller extends Controller
{
    public function __construct(UploadController $uploader)
    {
        $this->uploader = $uploader;
    }

    /**
     * Show the application {{moduleName}} index.
     */
    public function index(Request $request): View
    {
        $sortDirection = $request->input('sort_dir') ?: 'asc';
        $sortColumn = $request->input('sort') ?: 'created_at';
        return view('backend.{{moduleName}}.index', [
            '{{moduleName}}' => {{modelName}}::orderBy($sortColumn, $sortDirection)->paginate({{perPage}})
        ]);
    }

    /**
     * Display the specified resource edit form.
     */
    public function edit({{modelName}} ${{modelNameLowercase}}): View
    {
        return view('backend.{{moduleName}}.edit', [
            '{{modelNameLowercase}}' => ${{modelNameLowercase}}, 
            {{foreignData}}
        ]);
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create(): View
    {
        return view('backend.{{moduleName}}.create', [
            {{foreignData}}
        ]);
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store({{modelName}}Request $request): RedirectResponse
    {
{{fileUploads}}

        if (isset($errors)) {
            return redirect()->back()->withErrors($errors);    
        }else{
            ${{modelNameLowercase}} = {{modelName}}::create($request->all());
            {{createRelated}}
            return redirect()->route('backend.{{moduleName}}.edit', ${{modelNameLowercase}})->withSuccess(__('{{moduleName}}.created'));
        }
    }

    /**
     * Update the specified resource in storage.
     */
    public function update({{modelName}}Request $request, {{modelName}} ${{modelNameLowercase}}): RedirectResponse
    {
{{fileUploads}}

{{relatedUpdates}}

        if (isset($errors)) {
            return redirect()->back()->withErrors($errors);
        }else{
            ${{modelNameLowercase}}->update($request->validated());
            return redirect()->route('backend.{{moduleName}}.edit', ${{modelNameLowercase}})->withSuccess(__('{{moduleName}}.created'));
        }
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy({{modelName}}  ${{modelNameLowercase}})
    {
        ${{modelNameLowercase}}->delete();

        return redirect()->route('backend.{{moduleName}}.index')->withSuccess(__('{{moduleName}}.deleted'));
    }
}
